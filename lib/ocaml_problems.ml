module type Problem = sig
  val result : string
end

module Problem1 : Problem = struct
  (* If we list all the natural numbers below 10 that are multiples of 3 or 5,
  we get 3, 5, 6 and 9. The sum of these multiples is 23.

  Find the sum of all the multiples of 3 or 5 below 1000. *)
  let rec generator n =
    match n with
    | 0 -> 0
    | _ ->
        let rest = generator (n - 1) in
        if n mod 5 = 0 || n mod 3 = 0 then n + rest else rest

  let result = string_of_int (generator 999)
end

module Problem2 : Problem = struct
  (* Each new term in the Fibonacci sequence is generated by adding the
   previous two terms. By starting with 1 and 2, the first 10 terms will be:

                     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

   By considering the terms in the Fibonacci sequence whose values do not
   exceed four million, find the sum of the even-valued terms.*)

  
  let result = string_of_int 0
end


(* Various utils *)
